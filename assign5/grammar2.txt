# Symbols in the grammar are case-sensitive.
# 
# This grammar uses a convention that
#    - terminals are lowercase          (president)
#    - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
# 
# This convention just makes grammars more readable to humans.  Thus:
#
#    - When *you* are writing grammars, you should 
#      follow this convention unless you have a good reason not to.  
#
#    - But the  *program* should still work with grammars that don't
#      follow this convention.  So how can the program reliably tell
#      the difference between terminal and nonterminal symbols?  If
#      there is at least one rule for rewriting a symbol, then that
#      symbol is a nonterminal and should be rewritten.
#######################

# Rules for creating full sentences.

1	ROOT	S .
1	ROOT	S !
1	ROOT	is it true that S ?     # mixing terminals and nonterminals is ok.

# The basic grammar rules.  Here's what the abbreviations stand for:
#    S  = sentence
#    NP = noun phrase
#    VP = verb phrase
#    PP = prepositional phrase
#    Det = determiner (sometimes called "article")
#    Prep = preposition
#    Adj = adjective
#    CC = Coordination (and | or | but)
#    Vi = intransitive verb (without object)
#    Vt = transitive verb (with object)
#    COMP = Complementizer (that | which)
#    SBAR = Subordinate clause  
#    PRP = Personal pronoun
#    Adv = Adverb
#    Copula (is) = mark a relation between a subject and a predicate (NP and Adj/NP)
#    VBZ = Verb present tense
#    VBG_t = transitive verb present particple (ing)
#    VBG_i = intransitive verb present particple (ing)

1	S	NP VP
1   S   NP Copula Adj
1   S   NP Copula NP
1   VP  Vt CC VP
1	VP	Vt NP
1   VP  Vt PP
1   VP  Vt
1   VP  Vt SBAR
1   VP  VP PP
1   VP  VBZ VBG_t NP
1   VP  VBZ VBG_i
1   NP  NP CC NP
1	NP	Det Noun
1   NP  NNP 
1   NP  PRP
1	NP	NP PP
1   NP  NP SBAR
1	PP	Prep NP
1	Noun  Adj Noun
1   Noun  Adv Noun

1   SBAR COMP S 

# Vocabulary.  Your program can see that "ate" is a terminal
# symbol because there exists no rule for rewriting it.
# Any symbol that can rewrite as a terminal (or a string of 
# terminals, like "chief of staff") is called a "preterminal."  Notice 
# that a preterminal is a special kind of nonterminal.

1   VBZ is

1   VBG_t eating
 
1	Vt	ate
1	Vt	wanted
1	Vt	kissed
1	Vt	understood
1	Vt	pickled
1   Vt  thought
1   Vt  perplexed
1   Vt  worked
1   Vt sighed
 
1	Det	the
1	Det	a
1	Det	every

1	Noun	president
1	Noun	sandwich
1	Noun	pickle
1	Noun	chief of staff
1	Noun	floor
1   Noun    desk
1   Noun    proposal

1	Adj	fine
1	Adj	delicious
1	Adj	perplexed
1	Adj	pickled
1   Adj lazy

1   Adv very

1	Prep	with
1	Prep	on
1	Prep	under
1	Prep	in

1   CC and

1   NNP Sally

1   COMP that

1   PRP it

1   Copula is
